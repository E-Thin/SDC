// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id          String  @id @default(uuid())
  name        String
  email       String
  password    String
  phoneNumber String?
  roles       Role[]
  news        News[]
  notifi      Notifi[]
  refreshTokenJWT String?     @db.Text
  expriedAccessTokenJWT DateTime?
  created_at  DateTime @default(now())
}

model SessionAccount {
  id                    String    @id @default(uuid())
  accessTokenJWT        String?   @db.Text
  refreshTokenJWT       String?   @db.Text
  expriedAccessTokenJWT DateTime?
}

model Role {
  id              String    @id @default(uuid())
  nameRole        String
  descriptionRole String
  account         Account[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model News {
  id          String  @id @default(uuid())
  title       String
  body        String
  views       Int?
  typenewsId  String?
  typenews    TypeNews? @relation (fields: [typenewsId], references: [id])
  image       Image[]
  accountId   String
  account     Account @relation(fields: [accountId], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model TypeNews {
  id            String    @id @default(uuid())
  nameTypeNews  String
  description   String
  news          News[]
}

model Notifi {
  id              String  @id @default(uuid())
  title           String
  content         String
  account         Account[]
  departmentId    String
  department      Department? @relation (fields: [departmentId], references: [id])
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Department {
  id              String  @id @default(uuid())
  title           String
  description     String
  notifi          Notifi[]
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Information {
  id        String  @id @default(uuid())
  title     String
  body      String
  image     Image []
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model TrainingFields {
  id          String @id @default (uuid())
  title       String
  body        String
  image       Image []
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model AboutUs {
  id               String   @id @default(uuid())
  name             String
  description      String
  imageId          String?
  image            Image? @relation(fields: [imageId], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Feature {
  id                String   @id @default(uuid())
  name              String
  thumbnailFileName String
  url               String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Image {
  id                    String  @id @default(uuid())
  url                   String  @unique
  cloudinaryId          String  @unique
  newsId                String?
  news                  News? @relation(fields: [newsId], references: [id])
  aboutUs               AboutUs[]
  partner               Partner[]
  communicateId         String?
  communicate           Communicate? @relation(fields: [communicateId], references: [id])
  trainingfieldsId      String?
  trainingfields        TrainingFields? @relation(fields: [trainingfieldsId], references: [id])
  informationId         String?
  information           Information? @relation (fields: [informationId], references: [id])
  admissionsId          String?
  admission             Admissions? @relation(fields: [admissionsId], references: [id])
  created_at            DateTime   @default(now())
  updated_at            DateTime   @updatedAt
}

model Admissions {
  id              String  @id @default(uuid())
  title           String
  body            String
  image           Image[]
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Partner {
  id        String @id @default(uuid())
  name      String
  imageId   String
  image     Image @relation(fields: [imageId], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Link {
  id          String @id  @default(uuid())
  name        String
  url         String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Student {
  id          String  @id @default(uuid())
  fullName    String
  email       String?
  phoneNumber Int?
  address     String?
  schoolYears String?
  information String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Communicate {
  id        String  @id @default(uuid())
  title     String
  body      String
  image     Image []
  views     Int
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Schedule {
  id          String @id  @default(uuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
}